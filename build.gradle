group 'com.notifyme'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.8
ext{
    env = "prod"
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'org.testng:testng:6.9.4'
    compile 'io.dropwizard:dropwizard-core:0.8.1'
    compile ('io.dropwizard:dropwizard-assets:0.8.1')
    compile 'io.dropwizard:dropwizard-jdbi:0.8.1'
    compile ("com.google.inject:guice:4.0")
    compile 'org.jdbi:jdbi:2.62'
    compile 'mysql:mysql-connector-java:5.1.35'
    compile 'com.neovisionaries:nv-i18n:1.+'

    compile 'com.wordnik:swagger-core_2.10:1.3.12'
    compile ("com.wordnik:swagger-jaxrs_2.10:1.3.12") {
        exclude group: "javax.ws.rs", module: "*"
        exclude group: "com.google.guava", module: "*"
        exclude group: "com.fasterxml.jackson.core", module: "*"
        exclude group: "joda-time", module: "*"
        exclude group: "commons-lang", module: "*"
        exclude group: "com.fasterxml.jackson.jaxrs", module: "*"
        exclude group: "org.scala-lang", module: "scala-library"
        exclude group: "org.javassist", module: "*"
        exclude group: "com.thoughtworks.paranamer", module: "*"
    }

    compile ("com.zaxxer:HikariCP:2.3.7") {
        exclude group: "org.slf4j", module: "*"
    }
}

task copyResources(dependsOn: 'jar', type: org.gradle.api.tasks.Copy) {
    from "${project.buildDir}/resources/main"
    into "${project.buildDir}/release"
    include "$env/*"
    include "swagger/**"
    include "run.sh"
    include "run"
}

task copyMainJar(dependsOn: copyResources, type: org.gradle.api.tasks.Copy) {
    from "${project.buildDir}/classes/main"
    into "${project.buildDir}/release"
    include "**/*"
}

task releaseTar(dependsOn: copyMainJar, type: org.gradle.api.tasks.bundling.Tar) {
    classifier = "dist"
    from "${project.buildDir}/release"
    println "BUILD EXTENSION DIRECTORY: ${project.buildDir}, ROOT DIR: $rootDir"
}

jar {
    manifest {
        attributes 'Main-Class': 'com.notifyme.cli.Application'
    }
    doLast {
        // Bring the runtime jars into the lib
        configurations.runtime.files.each { file ->
            copy {
                from file
                into "${project.buildDir}/release/lib"
                exclude "jsr*.jar"
            }
        }
    }
}

artifacts {
    archives releaseTar
}
